{%- macro render(var, indent_width=2) %}
{%-   if var is mapping %}{
{%-     for conf, val in var | dictsort %}
{%-       if val is mapping %}
{%-         if not val %}
{{ conf | indent(indent_width) }}: {}{{ "," if not loop.last }}
{%-         else %}
{{ conf | indent(indent_width) }}: {
  {{ render(val, indent_width) | indent(indent_width) }}
{{ "}" | indent(indent_width) }}{{ "," if not loop.last }}
{%-         endif %}
{%-       elif val | is_list %}
{%-         if not val %}
{{ conf | indent(indent_width) }}: []{{ "," if not loop.last }}
{%-         else %}
{{ conf | indent(indent_width) }}: [
  {{ render(val, indent_width) | indent(indent_width) }}
{{ "]" | indent(indent_width) }}{{ "," if not loop.last }}
{%-         endif %}
{%-       else %}
  {{ conf | indent(indent_width) }}: {{ render(val) }}{{ "," if not loop.last }}
{%-       endif %}
{%-     endfor %}
}
{%-   elif var | is_list %}[
{%-     for val in var %}
  {{ render(val, indent_width) | indent(indent_width) }}{{ "," if not loop.last }}
{%-     endfor %}
]
{%-   elif var in [true, false] %}{{ var | lower }}
{%-   elif var is string and (var.startswith("function")) or (var.endswith(".split(/\s+/)")) %}{{ var }}
{%-   elif var is string %}"{{ var }}"
{%-   elif var is none %}null
{%-   elif var is integer %}{{ var }}
{%-   endif %}
{%- endmacro -%}

define(['/common/application_config_internal.js'], function(AppConfig) {
{%- for conf, val in cryptpad.customizations_app | dictsort %}
  AppConfig.{{ conf }} = {{ render(val) | indent(2) }};
{%- endfor %}

  return AppConfig;
});
